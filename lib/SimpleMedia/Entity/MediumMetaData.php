<?php
/**
 * SimpleMedia.
 *
 * @copyright Erik Spaan & Axel Guckelsberger (ESP)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SimpleMedia
 * @author Erik Spaan & Axel Guckelsberger <erik@zikula.nl>.
 * @link https://github.com/zikula-ev/SimpleMedia
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de).
 */

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity extension domain class storing medium meta data.
 *
 * This is the concrete meta data class for medium entities.
* @ORM\Entity(repositoryClass="SimpleMedia_Entity_Repository_MediumMetaData")
   * @ORM\Table(name="simmed_medium_metadata")
 */
class SimpleMedia_Entity_MediumMetaData extends SimpleMedia_Entity_Base_MediumMetaData
{
    // feel free to add your own methods here

    /**
     * @ORM\Column(type="string", length=80, nullable=true)
     * @var string
     */
    private $rights;

    /**
     * Extensive medium meta file tags (exif/iptc/xmp/etc) array.
     *
     * @ORM\Column(type="array")
     * @var array $metaTags.
     */
    protected $metaTags = array();
	
    /**
     * Get copyright.
     *
     * @return text
     */
    public function getRights()
    {
        return $this->rights;
    }

    /**
     * Set copyright.
     *
     * @param text $rights.
     *
     * @return void
     */
     public function setRights($rights)
    {
        $this->rights = $rights;
    }

    /**
     * Get the metaTags information.
     *
     * @return array
     */
    public function getMetaTags()
    {
        return $this->metaTags;
    }
    
    /**
     * Set the metaTags information.
     *
     * @param array $metaTags.
     *
     * @return void
     */
    public function setMetaTags($metaTags = Array())
    {
        if ($metaTags != $this->metaTags) {
            $this->metaTags = $metaTags;
        }
    }

}
