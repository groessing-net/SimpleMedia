<?php
/**
 * SimpleMedia.
 *
 * @copyright Erik Spaan & Axel Guckelsberger (ESP)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SimpleMedia
 * @author Erik Spaan & Axel Guckelsberger <erik@zikula.nl>.
 * @link https://github.com/zikula-ev/SimpleMedia
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.2 (http://modulestudio.de).
 */

/**
 * This handler class handles the page events of the Form called by the simpleMedia_medium_edit() function.
 * It aims on the medium object type.
 */
class SimpleMedia_Form_Handler_Medium_Edit extends SimpleMedia_Form_Handler_Medium_Base_Edit
{
    /**
     * Return list of attribute field names.
     * OVERRIDE: removed standard fields and added new ones
     *
     * @return array list of attribute names.
     */
    protected function getAttributeFieldNames()
    {
        return array('field1');
    }

    public function applyAction(array $args = array())
    {
        $success = parent::applyAction($args);
        if ($success) {
            $this->updatePreviewImage();
        }

        return $success;
    }

    /**
     * Small function to update the preview of the collections when a new image is uploaded.
     * Do not update if a previewImage is already set
     */
    private  function updatePreviewImage() {
        // assign previewImage in collection if not assigned yet
        if (isset($this->entityRef['collection']) && $this->entityRef['collection']->getPreviewImage() <= 0) {
            if (isset($this->entityRef['theFileMeta']['isImage']) && $this->entityRef['theFileMeta']['isImage']) {
                // if medium is an image then assign the id
                $this->entityRef['collection']->setPreviewImage($this->entityRef['id']);
                // flush the update to the DB
                $this->entityManager->flush();
            } elseif ($this->entityRef['previewImage'] > 0) {
                // if the medium is not an image, but has a previewImage then assign that one.
                $this->entityRef['collection']->setPreviewImage($this->entityRef['previewImage']);
                // flush the update to the DB
                $this->entityManager->flush();
            }
        }
    }
}
