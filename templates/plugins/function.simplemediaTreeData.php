<?php
/**
 * SimpleMedia.
 *
 * @copyright Erik Spaan & Axel Guckelsberger (ESP)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package SimpleMedia
 * @author Erik Spaan & Axel Guckelsberger <erik@zikula.nl>.
 * @link https://github.com/zikula-ev/SimpleMedia
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.2 (http://modulestudio.de).
 */

/**
 * The simplemediaTreeData plugin delivers the html output for a JS tree
 * based on given tree entities.
 *
 * Available parameters:
 *   - objectType: Name of treated object type.
 *   - tree:       Object collection with tree items.
 *   - controller: Optional name of controller, defaults to 'user'.
 *   - root:       Optional id of root node, defaults to 1.
 *   - sortable:   Whether tree nodes should be sortable or not, defaults to true.
 *   - assign:     If set, the results are assigned to the corresponding variable instead of printed out.
 *
 * @param  array       $params  All attributes passed to this function from the template.
 * @param  Zikula_View $view    Reference to the view object.
 *
 * @return string The output of the plugin.
 */
function smarty_function_simplemediaTreeData($params, $view)
{
    if (!isset($params['objectType']) || empty($params['objectType'])) {
        $view->trigger_error(__f('Error! in %1$s: the %2$s parameter must be specified.', array('simplemediaTreeJS', 'objectType')));

        return false;
    }

    if (!isset($params['tree']) || empty($params['tree'])) {
        $view->trigger_error(__f('Error! in %1$s: the %2$s parameter must be specified.', array('simplemediaTreeJS', 'tree')));

        return false;
    }

    if (!isset($params['controller']) || empty($params['controller'])) {
        $params['controller'] = 'user';
    }

    if (!isset($params['root']) || empty($params['root'])) {
        $params['root'] = 1;
    }

    // check whether an edit action is available
    $controllerHasEditAction = false;
    switch ($params['controller']) {
        case 'user': $controllerHasEditAction = true; break;
    }

    $entityClass = 'SimpleMedia_Entity_' . ucfirst($params['objectType']);
    $serviceManager = ServiceUtil::getManager();
    $entityManager = $serviceManager->getService('doctrine.entitymanager');
    $repository = $entityManager->getRepository($entityClass);
    $descriptionFieldName = $repository->getDescriptionFieldName();

    $result = '';
    $treeData = array();

    foreach ($params['tree'] as $item) {
        $url = $controllerHasEditAction ? ModUtil::url('SimpleMedia', $params['controller'], 'edit', $item->createUrlArgs()) : '';

        $parent = $item->getParent();
        $treeData[] = array('id' => $item->createCompositeIdentifier(),
                            'parent_id' => $parent ? $parent->createCompositeIdentifier() : null,
                            'name' => $item->getTitleFromDisplayPattern(),
                            'title' => (($descriptionFieldName != '') ? strip_tags($item[$descriptionFieldName]) : ''),
                          //'icon' => '',
                          //'class' => '',
                            'active' => true,
                          //'expanded' => null,
                            'href' => $url);
    }

    // instantiate and initialise the output tree object
    $tree = new Zikula_Tree();
    $tree->setOption('id', 'itemTree' . $params['root']);
    $tree->setOption('treeClass', 'z-nestedsetlist');
    $tree->setOption('nodePrefix', 'tree' . $params['root'] . 'node_');
    $tree->setOption('sortable', ((isset($params['sortable']) && $params['sortable']) ? true : false));
    $tree->setOption('withWraper', true);

    // disable drag and drop for root category
    $tree->setOption('disabled', array(1));

    // put data into output tree
    $tree->loadArrayData($treeData);

    // get output result
    $result = $tree->getHTML();

    if (array_key_exists('assign', $params)) {
        $view->assign($params['assign'], $result);

        return;
    }

    return $result;
}
