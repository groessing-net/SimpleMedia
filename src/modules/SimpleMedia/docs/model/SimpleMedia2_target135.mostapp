application SimpleMedia {
	documentation "Simple file and media management in Collections."
	vendor "ZKM"
	author "Erik Spaan"
	email "erik@zikula.nl"
	url "https://github.com/zikula-ev/SimpleMedia"
	version "2.0.0"
	prefix simmed
	modelPath ""
	targetCoreVersion ZK135
	modelLayer {
		modelContainer Model {
			numExampleRows 0
			entities {
				entity medium leading geographical categorisable metaData {
					documentation "Media of all sorts"
					nameMultiple media
					incoming ( "collection.media" ) fields {
						string title leading {
							documentation "Medium title"
							defaultValue ""
							sluggablePosition 1
						},
						upload theFile {
							
						    documentation "The attached file to this medium"
							
						    allowedExtensions
"gif, jpeg, jpg, png, pdf, doc, xls, ppt, docx, xlsx, pptx, odt, ods, odp, arj, zip, rar, tar, tgz, gz, bz2, txt, rtf, swf, flv, mp3, mp4, avi, mpg, mpeg, mov"
						    allowedFileSize 5000000
							subFolderName ""
						},
						text description {
							documentation "Extensive description of this medium item"
							defaultValue ""
							mandatory false
						},
						array additionalData {
							documentation "Can contain infomation like exif, IPTC, XMP, Copyright, Etc."
							defaultValue ""
							mandatory false
						},
						integer previewImage {
							documentation "Contains an optional thumbnail image for the medium item."
							defaultValue "0"
							mandatory false
						},
						integer sortValue {
							documentation "Used for sorting media within a collection."
							defaultValue ""
							mandatory false
						},
						list mediaType {
							mandatory false
							items {
								default listItem Image ( ^image ),
								listItem Movie ( movie ),
								listItem Audio ( audio ),
								listItem Text ( ^text ),
								listItem Other ( other )
							}
						},
						integer viewsCount readonly {
							
						    documentation "The number of views for this medium"
							defaultValue "0"
							mandatory false
						}
					}
				},
				entity collection categorisable {
					documentation "Collections form a nested tree that can contain one or more media items and collections."
					nameMultiple collections
					tree NESTED
					outgoing ( "collection.media" ) fields {
						string title leading {
							documentation "Collection title"
							defaultValue ""
						},
						text description {
							documentation "Extensive description of the collection"
							defaultValue ""
							mandatory false
						},
						integer previewImage {
							documentation "The representing thumbnail image. Does not have to be within the collection itself."
							defaultValue "0"
							mandatory false
						},
						integer sortValue {
							documentation "Used for sorting collections within a parent collection."
							defaultValue ""
							mandatory false
						},
						integer viewsCount readonly {
							
						    documentation "The number of views for this collection"
							defaultValue "0"
							mandatory false
						}
					}
				}
			}
			relations {
				one2many bidirectional unique {
					source collection
					sourceAlias collection
					target medium
					targetAlias media
					nullable false
					editType ACTIVE_EDIT_PASSIVE_EDIT
					
					orderBy ""
				
				}
			
			}
			variables {
				varContainer MediaSettings {
					documentation "Here you manage all configuration settings for SimpleMedia"
					vars {
						intVar pageSize {
							documentation "Number of items on a page (backend)"
							value "20"
						},
						intVar mediaPageSize {
							documentation "Number of media on a page (frontend)"
							value "15"
						},
						intVar collectionsPageSize {
							documentation "Number of collections on a page (frontend)"
							value "6"
						},
						textVar thumbDimensions {
							documentation
							"Contains an array of thumbnail widthxheight dimensions array ( array ( width => 200, height => 150 ) )"
							value ""
						},
						intVar defaultThumbNumber {
							documentation "The default thumbnail that is used from the set of Thumbdimensions"
							value "1"
						},
						boolVar enableShrinking {
							documentation "Enable shrinking to maximum image dimensions, original image not stored"
							value ^false
						},
						textVar shrinkDimensions {
							documentation "Maximum image dimensions after shrink (w x h)"
							value ""
						},
						boolVar useThumbCropper {
							documentation "Use cropper for the thumbnail image"
							value ^false
						},
						intVar cropSizeMode {
							documentation "Cropping size mode"
							value "0"
						},
						textVar ^allowedExtensions {
							documentation "Allowed file extensions for file upload"
							value "gif, jpeg, jpg, png, pdf, txt, mp3, mp4, avi, mpg, mpeg, mov"
							maxLength 255
						},
						intVar maxUploadFileSize {
							documentation "Maximum File Size during upload in kB. Default after install is 5 MB."
							value "5000"
						},
						intVar minWidthForUpload {
							documentation "Minimum pixel width of an image to upload, to be able to generate thumbnails."
							value "100"
						},
						intVar defaultCollection {
							documentation "The default Collection that is used for new Media."
							value "1"
						},
						textVar mediaDir {
							documentation "The folder location under userdata/SimpleMedia where the uploaded files are stored."
							value "media/thefile"
							maxLength 100
						},
						textVar mediaThumbDir {
							documentation "Media thumbnail folder name"
							value tmb
							maxLength 100
						},
						textVar mediaThumbExt {
							documentation "Media thumbnail suffix"
							value "_tmb_"
							maxLength 20
						},
						boolVar countMediumViews {
							documentation "Count the number of medium views "
							value ^false
						},
						boolVar countCollectionViews {
							documentation "Count the number of collection views"
							value ^false
						}
					}
				}
			}
		}
	}
	controllerLayer {
		controllerContainer Controller {
			modelContext ( "SimpleMedia.Model" )
			processViews "SimpleMedia.View"
			controllers {
				adminController Admin {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display,
						editAction Edit,
						customAction Import
					}
				},
				userController User {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display
					}
				},
				ajaxController Ajax {
					actions {
						mainAction Main
					}
				}
			}
		}
	}
	viewLayer {
		viewContainer View {
			controller "SimpleMedia.Controller"
		}
	}
}