application SimpleMedia {
	documentation "Simple file and media management in Collections."
	vendor "ESP"
	author "Erik Spaan & Axel Guckelsberger"
	email "erik@zikula.nl"
	url "https://github.com/zikula-ev/SimpleMedia"
	version "2.0.0"
	prefix simmed
	generatorSettings {
		settingsContainer Settings
		targetCoreVersion ZK135
		generateRssTemplates false
		generateAtomTemplates false
		generateCsvTemplates false
		generateXmlTemplates false
		generateJsonTemplates false
		generateKmlTemplates false
		timestampAllGeneratedFiles false
		generatePoweredByBacklinksIntoFooterTemplates false
		generateTests false
		writeModelToDocs true
		markFiles "
    lib/SimpleMedia/Api/User.php,
    lib/SimpleMedia/Controller/Ajax.php,
    lib/SimpleMedia/Controller/External.php,
    lib/SimpleMedia/Controller/Medium.php,
    lib/SimpleMedia/Controller/Collection.php,
    lib/SimpleMedia/Entity/Collection.php,
    lib/SimpleMedia/Entity/Medium.php,
    lib/SimpleMedia/Entity/MediumMetaData.php,
    lib/SimpleMedia/Form/Handler/Admin/Config.php,
    lib/SimpleMedia/Form/Handler/Medium/Edit.php,
    lib/SimpleMedia/Util/Image.php,
    lib/SimpleMedia/Installer.php,
    lib/SimpleMedia/UploadHandler.php,
    
    docs/credits.md,
    
    style/style.css,
    
    templates/admin/config.tpl,
    templates/external/medium/find.tpl,
    templates/collection/display.tpl,
    templates/collection/view.tpl,
    templates/collection/edit.tpl,
    templates/collection/view_items.tpl,
    templates/medium/display.tpl,
    templates/helper/include_metadata_display.tpl,
    templates/helper/include_standardfields_display.tpl,
    README.md
		"
	}
	modelLayer {
		modelContainer Model {
			numExampleRows 0
			entities {
                entity medium leading geographical categorisable categorisableMultiSelection attributable metaData {
                        documentation "Media of all sorts"
                        nameMultiple media
                        displayPattern "#title#"
                        incoming ( "collection.media" )
                        fields {
                                string title {
                                        documentation "Medium title"
                                        defaultValue ""
                                        sluggablePosition 1
                                },
                                upload theFile {
                                    documentation "The attached file to this medium"
                                        regexp ""
                                        allowedExtensions "gif, jpeg, jpg, png, pdf, doc, xls, ppt, docx, xlsx, pptx, odt, ods, odp, arj, zip, rar, tar, tgz, gz, bz2, txt, rtf, swf, flv, mp3, mp4, avi, mpg, mpeg, mov"
                                    subFolderName files
                                    allowedFileSize 5000000
                                },
                                text description {
                                        documentation "Extensive description of this medium item"
                                        defaultValue ""
                                        mandatory false
                                },
                                list mediaType {
                                        mandatory false
                                        items {
                                                default listItem Image ( ^image ),
                                                listItem Movie ( movie ),
                                                listItem Audio ( audio ),
                                                listItem Text ( ^text ),
                                                listItem Other ( other )
                                        }
                                },
                                string zipcode {
                                        documentation "Zip code for the geographical location of this medium"
                                        defaultValue ""
                                        mandatory false
                                        length 15
                                },
                                integer previewImage {
                                        documentation "Contains an optional thumbnail image for the medium item."
                                        defaultValue "0"
                                        mandatory false
                                },
                                integer viewsCount readonly {
                                    documentation "The number of views for this medium"
                                        defaultValue "0"
                                        mandatory false
                                },
                                integer sortValue {
                                        documentation "Used for sorting media within a collection."
                                        defaultValue "0"
                                        mandatory false
                                }
                        }
                },
                entity collection categorisable {
                        documentation "Collections are nested trees that can contain media items and sub-collections."
                        nameMultiple collections
                        displayPattern "#title#"
                        tree NESTED
                        outgoing ( "collection.media" )
                        fields {
                                string title {
                                        documentation "Collection title"
                                        defaultValue ""
                                },
                                text description {
                                        documentation "Extensive description of the collection"
                                        defaultValue ""
                                        mandatory false
                                },
                                integer previewImage {
                                        documentation "The representing thumbnail image. Does not have to be within the collection itself."
                                        defaultValue "0"
                                        mandatory false
                                },
                                integer viewsCount readonly {
                                    documentation "The number of views for this collection"
                                        defaultValue "0"
                                        mandatory false
                                },
                                integer sortValue {
                                        documentation "Used for sorting collections within a parent collection."
                                        defaultValue ""
                                        mandatory false
                                }
                        }
                }
			}
			relations {
				one2many bidirectional {
					source collection
					sourceAlias collection
					target medium
					targetAlias media
					nullable false
					editType ACTIVE_EDIT_PASSIVE_EDIT
					cascade PERSIST
					orderBy ""
				}
			}
			variables {
				varContainer MediaSettings {
					documentation "Manage all configuration settings for SimpleMedia"
					vars {
						intVar pageSize {
							documentation "Number of items on a page (backend)"
							value "20"
						},
						intVar mediaPageSize {
							documentation "Number of media on a page (frontend)"
							value "25"
						},
						intVar collectionsPageSize {
							documentation "Number of collections on a page (frontend)"
							value "15"
						},
						textVar mediumImaginePreset {
							documentation "Use this Imagine system plugin preset for medium thumbnails in the frontend."
							value "default"
							maxLength 100
						},
						textVar collectionImaginePreset {
							documentation "Use this Imagine system plugin preset for collection thumbnails in the frontend."
							value "default"
							maxLength 100
						},
						boolVar enableShrinking {
							documentation "Enable shrinking to maximum image dimensions, original image not stored"
							value ^false
						},
						textVar shrinkDimensions {
							documentation "Maximum image dimensions after shrink (w x h)"
							value ""
						},
						boolVar useThumbCropper {
							documentation "Use cropper for the thumbnail image"
							value ^false
						},
						intVar cropSizeMode {
							documentation "Cropping size mode"
							value "0"
						},
						textVar ^allowedExtensions {
							documentation "Allowed file extensions for file upload"
							value "gif, jpeg, jpg, png, pdf, txt, mp3, mp4, avi, mpg, mpeg, mov, zip"
							maxLength 255
						},
						intVar maxUploadFileSize {
							documentation "Maximum File Size during upload in kB. Default after install is 5 MB."
							value "5000"
						},
						intVar minWidthForUpload {
							documentation "Minimum pixel width of an image to upload, to be able to generate thumbnails."
							value "100"
						},
						intVar defaultCollection {
							documentation "The default Collection that is used for new Media."
							value "1"
						},
						textVar mediaDir {
							documentation "The folder location under userdata/SimpleMedia where the uploaded files are stored."
							value "media/files"
							maxLength 100
						},
						textVar mediaThumbDir {
							documentation "Media thumbnail folder name"
							value tmb
							maxLength 100
						},
						textVar mediaThumbExt {
							documentation "Media thumbnail suffix"
							value "_tmb_"
							maxLength 20
						},
						boolVar countMediumViews {
							documentation "Count the number of medium views "
							value ^true
						},
						boolVar countCollectionViews {
							documentation "Count the number of collection views"
							value ^true
						}
					}
				}
			}
		}
	}
	controllerLayer {
		controllerContainer Controller {
			modelContext ( "SimpleMedia.Model" )
			processViews "SimpleMedia.View"
			controllers {
				adminController Admin {
					actions {
						mainAction Main,
						customAction Import {
							documentation "Import media / collections from other modules"
						}
					}
				},
				userController User {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display,
						editAction Edit,
						deleteAction Delete,
						customAction MultiUpload {
							documentation "Upload multiple media in one go from the frontend."
						},
						customAction EditList {
							documentation "Provide a list overview of multiple media for easy editing of media properties."
						}
					}
				},
				ajaxController Ajax {
					actions {
						mainAction Main
					}
				}
			}
		}
	}
	viewLayer {
		viewContainer View {
			controller "SimpleMedia.Controller"
		}
	}
}
